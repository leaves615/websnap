package cn.leaves.websnap.batis.mapper;

import cn.leaves.websnap.batis.entity.Pagecollectcontent;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface PagecollectcontentMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @Delete({
        "delete from pageCollectContent",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @Insert({
        "insert into pageCollectContent (id, pageId, ",
        "contentRuleId, content)",
        "values (#{id,jdbcType=BIGINT}, #{pageid,jdbcType=BIGINT}, ",
        "#{contentruleid,jdbcType=BIGINT}, #{content,jdbcType=LONGVARCHAR})"
    })
    int insert(Pagecollectcontent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @InsertProvider(type=PagecollectcontentSqlProvider.class, method="insertSelective")
    int insertSelective(Pagecollectcontent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, pageId, contentRuleId, content",
        "from pageCollectContent",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="pageId", property="pageid", jdbcType=JdbcType.BIGINT),
        @Result(column="contentRuleId", property="contentruleid", jdbcType=JdbcType.BIGINT),
        @Result(column="content", property="content", jdbcType=JdbcType.LONGVARCHAR)
    })
    Pagecollectcontent selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @UpdateProvider(type=PagecollectcontentSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Pagecollectcontent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @Update({
        "update pageCollectContent",
        "set pageId = #{pageid,jdbcType=BIGINT},",
          "contentRuleId = #{contentruleid,jdbcType=BIGINT},",
          "content = #{content,jdbcType=LONGVARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKeyWithBLOBs(Pagecollectcontent record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pageCollectContent
     *
     * @mbggenerated
     */
    @Update({
        "update pageCollectContent",
        "set pageId = #{pageid,jdbcType=BIGINT},",
          "contentRuleId = #{contentruleid,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Pagecollectcontent record);

    @Select("select * from pageCollectContent where pageId=#{pageid} order by id asc")
    List<Pagecollectcontent> selectByPageId(Long pageid);
}