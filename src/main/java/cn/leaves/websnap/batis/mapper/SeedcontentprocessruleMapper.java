package cn.leaves.websnap.batis.mapper;

import cn.leaves.websnap.batis.entity.Seedcontentprocessrule;
import cn.leaves.websnap.batis.entity.Seedpagerule;
import com.github.pagehelper.Page;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface SeedcontentprocessruleMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seedContentProcessRule
     *
     * @mbggenerated
     */
    @Delete({
        "delete from seedContentProcessRule",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seedContentProcessRule
     *
     * @mbggenerated
     */
    @Insert({
        "insert into seedContentProcessRule (id, pageId, ",
        "collectVar, collectType, ",
        "collectLabel, collectPattern, ",
        "storage, conditional, ",
        "conditionPattern)",
        "values (#{id,jdbcType=BIGINT}, #{pageid,jdbcType=BIGINT}, ",
        "#{collectvar,jdbcType=VARCHAR}, #{collecttype,jdbcType=VARCHAR}, ",
        "#{collectlabel,jdbcType=VARCHAR}, #{collectpattern,jdbcType=VARCHAR}, ",
        "#{storage,jdbcType=BIT}, #{conditional,jdbcType=BIT}, ",
        "#{conditionpattern,jdbcType=VARCHAR})"
    })
    int insert(Seedcontentprocessrule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seedContentProcessRule
     *
     * @mbggenerated
     */
    @InsertProvider(type=SeedcontentprocessruleSqlProvider.class, method="insertSelective")
    int insertSelective(Seedcontentprocessrule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seedContentProcessRule
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, pageId, collectVar, collectType, collectLabel, collectPattern, storage, ",
        "conditional, conditionPattern",
        "from seedContentProcessRule",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="pageId", property="pageid", jdbcType=JdbcType.BIGINT),
        @Result(column="collectVar", property="collectvar", jdbcType=JdbcType.VARCHAR),
        @Result(column="collectType", property="collecttype", jdbcType=JdbcType.VARCHAR),
        @Result(column="collectLabel", property="collectlabel", jdbcType=JdbcType.VARCHAR),
        @Result(column="collectPattern", property="collectpattern", jdbcType=JdbcType.VARCHAR),
        @Result(column="storage", property="storage", jdbcType=JdbcType.BIT),
        @Result(column="conditional", property="conditional", jdbcType=JdbcType.BIT),
        @Result(column="conditionPattern", property="conditionpattern", jdbcType=JdbcType.VARCHAR)
    })
    Seedcontentprocessrule selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seedContentProcessRule
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SeedcontentprocessruleSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Seedcontentprocessrule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seedContentProcessRule
     *
     * @mbggenerated
     */
    @Update({
        "update seedContentProcessRule",
        "set pageId = #{pageid,jdbcType=BIGINT},",
          "collectVar = #{collectvar,jdbcType=VARCHAR},",
          "collectType = #{collecttype,jdbcType=VARCHAR},",
          "collectLabel = #{collectlabel,jdbcType=VARCHAR},",
          "collectPattern = #{collectpattern,jdbcType=VARCHAR},",
          "storage = #{storage,jdbcType=BIT},",
          "conditional = #{conditional,jdbcType=BIT},",
          "conditionPattern = #{conditionpattern,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Seedcontentprocessrule record);

    @Select({
            "select scpr.*",
            "from seedContentProcessRule scpr",
            "where scpr.pageId = #{pageId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="pageId", property="pageid", jdbcType=JdbcType.BIGINT),
            @Result(column="collectVar", property="collectvar", jdbcType=JdbcType.VARCHAR),
            @Result(column="collectType", property="collecttype", jdbcType=JdbcType.VARCHAR),
            @Result(column="collectLabel", property="collectlabel", jdbcType=JdbcType.VARCHAR),
            @Result(column="collectPattern", property="collectpattern", jdbcType=JdbcType.VARCHAR),
            @Result(column="storage", property="storage", jdbcType=JdbcType.BIT),
            @Result(column="conditional", property="conditional", jdbcType=JdbcType.BIT),
            @Result(column="conditionPattern", property="conditionpattern", jdbcType=JdbcType.VARCHAR)
    })
    Page<Seedcontentprocessrule> selectByRuleId(Long ruleId);

}