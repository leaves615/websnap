package cn.leaves.websnap.batis.mapper;

import cn.leaves.websnap.batis.entity.Seed;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

public interface SeedMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seed
     *
     * @mbggenerated
     */
    @Delete({
        "delete from seed",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seed
     *
     * @mbggenerated
     */
    @Insert({
        "insert into seed (id, url, ",
        "lastExecuteTime, cron, ",
        "status)",
        "values (#{id,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, ",
        "#{lastexecutetime,jdbcType=TIMESTAMP}, #{cron,jdbcType=BIGINT}, ",
        "#{status,jdbcType=BIT})"
    })
    int insert(Seed record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seed
     *
     * @mbggenerated
     */
    @InsertProvider(type=SeedSqlProvider.class, method="insertSelective")
    int insertSelective(Seed record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seed
     *
     * @mbggenerated
     */
    @Select({
        "select",
        "id, url, lastExecuteTime, cron, status",
        "from seed",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="lastExecuteTime", property="lastexecutetime", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="cron", property="cron", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.BIT),
        @Result(column = "numberOfCrawler", property = "numberOfCrawler", jdbcType = JdbcType.VARCHAR),
        @Result(column = "charset", property = "charset", jdbcType = JdbcType.VARCHAR)
    })
    Seed selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seed
     *
     * @mbggenerated
     */
    @UpdateProvider(type=SeedSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Seed record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table seed
     *
     * @mbggenerated
     */
    @Update({
        "update seed",
        "set url = #{url,jdbcType=VARCHAR},",
          "lastExecuteTime = #{lastexecutetime,jdbcType=TIMESTAMP},",
          "cron = #{cron,jdbcType=BIGINT},",
          "status = #{status,jdbcType=BIT}",
          "numberOfCrawler = #{numberOfCrawler,jdbcType=BIT}",
          "charset = #{charset,jdbcType=BIT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Seed record);

    @Select({
            "select *",
            "from seed"
    })
    @Result(javaType = Seed.class)
    List<Seed> selectAll();
}